{"ast":null,"code":"var _jsxFileName = \"/Users/mrterrific/Downloads/SMDb_Mini_Project-main/frontend/src/components/MovieList.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport './m_list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [expandedDescriptionId, setExpandedDescriptionId] = useState(null);\n  useEffect(() => {\n    // Fetch movies data from backend API\n    axios.get('https://smdb-mini-project.onrender.com/api/movies').then(response => {\n      setMovies(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching movies:', error);\n      setLoading(false);\n    });\n  }, []); // Empty dependency array means this effect runs only once, similar to componentDidMount\n\n  const handleDescriptionToggle = id => {\n    setExpandedDescriptionId(expandedDescriptionId === id ? null : id);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-grid\",\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.imageUrl,\n          alt: \"Movie Poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 30\n          }, this), \" \", movie.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 30\n          }, this), \" \", movie.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Director:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 30\n          }, this), \" \", movie.director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Actors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 30\n          }, this), \" \", movie.actors.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Release Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 30\n          }, this), \" \", new Date(movie.releaseDate).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 30\n          }, this), \" \", movie.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), \" \", expandedDescriptionId === movie._id ? movie.description : `${movie.description.slice(0, 100)}...`, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDescriptionToggle(movie._id),\n            children: expandedDescriptionId === movie._id ? 'Show Less' : 'Read More'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Runtime:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 30\n          }, this), \" \", movie.runtime, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, movie._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieList, \"37CUn4sfNBiNI1U/q2jaIbEhoUI=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["axios","React","useState","useEffect","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","loading","setLoading","expandedDescriptionId","setExpandedDescriptionId","get","then","response","data","catch","error","console","handleDescriptionToggle","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","movie","src","imageUrl","alt","title","genre","director","actors","join","Date","releaseDate","toLocaleDateString","rating","_id","description","slice","onClick","runtime","_c","$RefreshReg$"],"sources":["/Users/mrterrific/Downloads/SMDb_Mini_Project-main/frontend/src/components/MovieList.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './m_list.css';\r\n\r\nconst MovieList = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [expandedDescriptionId, setExpandedDescriptionId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch movies data from backend API\r\n        axios.get('https://smdb-mini-project.onrender.com/api/movies')\r\n            .then(response => {\r\n                setMovies(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching movies:', error);\r\n                setLoading(false);\r\n            });\r\n    }, []); // Empty dependency array means this effect runs only once, similar to componentDidMount\r\n\r\n    const handleDescriptionToggle = (id) => {\r\n        setExpandedDescriptionId(expandedDescriptionId === id ? null : id);\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"movie-grid\">\r\n            {movies.map(movie => (\r\n                <div key={movie._id} className=\"movie-container\">\r\n                    <div className=\"movie-image\">\r\n                        <img src={movie.imageUrl} alt=\"Movie Poster\" />\r\n                    </div>\r\n                    <div className=\"movie-details\">\r\n                        <div><strong>Title:</strong> {movie.title}</div>\r\n                        <div><strong>Genre:</strong> {movie.genre}</div>\r\n                        <div><strong>Director:</strong> {movie.director}</div>\r\n                        <div><strong>Actors:</strong> {movie.actors.join(', ')}</div>\r\n                        <div><strong>Release Date:</strong> {new Date(movie.releaseDate).toLocaleDateString()}</div>\r\n                        <div><strong>Rating:</strong> {movie.rating}</div>\r\n                        <div>\r\n                            <strong>Description:</strong> {expandedDescriptionId === movie._id ? movie.description : `${movie.description.slice(0, 100)}...`}\r\n                            <button onClick={() => handleDescriptionToggle(movie._id)}>\r\n                                {expandedDescriptionId === movie._id ? 'Show Less' : 'Read More'}\r\n                            </button>\r\n                        </div>\r\n                        <div><strong>Runtime:</strong> {movie.runtime} minutes</div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}